@model Data.News

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">
    function ShowPreview(input) {
        if (input.files && input.files[0]) {
            var ImageDir = new FileReader();
            ImageDir.onload = function (e) {
                $('#impPrev').attr('src', e.target.result)
            }
            ImageDir.readAsDataURL(input.files[0]);
        }
    }
</script>
<script src="~/Content/Admin/bower_components/ckeditor/ckeditor.js"></script>
<script>
    CKEDITOR.replace(ckeditor1);
</script>
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>News</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.NewsID)

        <div class="form-group">
            @Html.LabelFor(model => model.NewsTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewsTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewsTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewsContent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.NewsContent, new { @class = "ckeditor", @id = "ckeditor1" })
                @Html.ValidationMessageFor(model => model.NewsContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TheardID, "Danh mục", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TheardID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TheardID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Thumbnail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="boc-lay-tan">
                    @if (Model.Thumbnail == null)
                    {
                        <img src="~/Content/f7deatNoImage.png" class="img-thumbnail" id="impPrev" style="height:100px;width:100px;margin:5px" />
                        <input type="file" name="fileim" id="imageupload" accept=".png,.jpg,.gif" onchange="ShowPreview(this)" />
                    }
                    else
                    {
                        <img src="data:image/gif;base64,@Convert.ToBase64String(Model.Thumbnail)" class="img-thumbnail" id="impPrev" style="height:100px;width:100px;margin:5px" />
                        <input type="file" name="fileim" id="imageupload" accept=".png,.jpg,.gif" onchange="ShowPreview(this)" />
                    }
                    
                    @Html.ValidationMessageFor(model => model.Thumbnail, "", new { @class = "text-danger" })
                </div>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
